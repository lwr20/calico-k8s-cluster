#cloud-config
---
write_files:
  # Diags collection helper script:
  - path: /home/core/getcdiags.sh
    owner: root
    permissions: 0755
    content: |
      #!/bin/bash
      # Last line of calicoctl diags looks like this:
      # "  curl --upload-file /tmp/tmpRACajJ/diags-260516_123004.tar.gz https://transfer.sh/diags-260516_123004.tar.gz"
      FILE=`calicoctl diags | tail -1 | cut -f 5 -d " "`
      cat ${FILE}
  # Network config file for the Calico CNI plugin.
  - path: /etc/cni/net.d/10-calico.conf
    owner: root
    permissions: 0755
    content: |
      {
          "name": "calico-k8s-network",
          "type": "calico",
          "etcd_authority": "127.0.0.1:2379",
          "log_level": "debug",
          "debug": true,
          "ipam": {
              "type": "calico-ipam"
          },
          "policy": {
              "type": "k8s",
              "k8s_api_root": "http://__CLUSTER_PREFIX__-master:8080/api/v1/"
          }
      }
  - path: /etc/resolv.conf
    owner: root
    permissions: 0755
    content: |
      # nameserver 10.100.0.10
      nameserver 169.254.169.254
      search default.svc.cluster.local svc.cluster.local cluster.local c.__GCE_PROJECT__.internal
coreos:
  etcd2:
    proxy: on
    listen-client-urls: http://127.0.0.1:2379
    initial-cluster: __ETCD_PEER_URLS__
  update:
    reboot-strategy: off
  units:
    - name: "docker.service"
      drop-ins:
        - name: "50-insecure-registry.conf"
          content: |
            [Service]
            Environment=DOCKER_OPTS='--insecure-registry="__CLUSTER_PREFIX__-master:5000"'
            ExecStartPre=/usr/bin/rm -rf /var/lib/docker
    - name: etcd2.service
      command: start
    - name: calico-node.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=calicoctl node
        After=docker.service
        Requires=docker.service

        [Service]
        User=root
        Environment=ETCD_AUTHORITY=127.0.0.1:2379
        PermissionsStartOnly=true
        ExecStartPre=/usr/bin/wget -N -P /opt/bin http://__CLUSTER_PREFIX__-master/calicoctl
        ExecStartPre=/usr/bin/chmod +x /opt/bin/calicoctl
        ExecStartPre=/usr/bin/docker pull __CLUSTER_PREFIX__-master:5000/calico-node
        ExecStartPre=/opt/bin/calicoctl config felix PrometheusMetricsEnabled true --force
        ExecStart=/opt/bin/calicoctl node --node-image=__CLUSTER_PREFIX__-master:5000/calico-node --detach=false
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target

    - name: kubelet.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/kubernetes/kubernetes
        After=docker.service
        After=etcd2.service
        After=calico-node.service
        Requires=docker.service

        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/__K8S_VER__/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStartPre=/usr/bin/wget -N -P /tmp http://__CLUSTER_PREFIX__-master/calico-cni.tgz
        ExecStartPre=/usr/bin/tar -C /opt -xzf /tmp/calico-cni.tgz
        ExecStartPre=/usr/bin/mkdir -p /opt/cni/bin
        ExecStartPre=/usr/bin/cp /opt/calico/calico /opt/cni/bin/calico
        ExecStartPre=/usr/bin/cp /opt/calico/calico-ipam /opt/cni/bin/calico-ipam
        ExecStartPre=/usr/bin/cp /opt/calico/loopback /opt/cni/bin/loopback
        ExecStartPre=/usr/bin/docker pull __CLUSTER_PREFIX__-master:5000/scale-tester
        ExecStartPre=/usr/bin/docker tag __CLUSTER_PREFIX__-master:5000/scale-tester caseydavenport/scale-tester
        ExecStartPre=/usr/bin/docker pull gcr.io/google_containers/pause:0.8.0
        ExecStart=/opt/bin/kubelet \
        --port=10250 \
        --address=0.0.0.0 \
        --allow-privileged=true \
        --cluster-dns=10.100.0.10 \
        --cluster-domain=cluster.local \
        --api-servers=http://__CLUSTER_PREFIX__-master:8080 \
        --network-plugin-dir=/etc/cni/net.d \
        --network-plugin=cni \
        --hostname-override=$private_ipv4 \
        --max-pods=110 \
        --logtostderr=true
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target

    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin  https://storage.googleapis.com/kubernetes-release/release/__K8S_VER__/bin/linux/amd64/kube-proxy
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy
        ExecStart=/opt/bin/kube-proxy \
        --master=http://__CLUSTER_PREFIX__-master:8080 \
        --proxy-mode=iptables \
        --logtostderr=true
        Restart=always
        RestartSec=10

    - name: node-exporter.service
      command: start
      content: |
        [Unit]
        Description=Prometheus node statistics exporter
        After=docker.service
        Requires=docker.service
        [Service]
        ExecStart=/usr/bin/docker run --rm --name node-exporter \
                    -p 9100:9100 --net="host" __CLUSTER_PREFIX__-master:5000/node-exporter \
                    -collectors.enabled=filefd,diskstats,loadavg,meminfo,stat,time,vmstat
        Restart=always
        RestartSec=10
